// Generated by view binder compiler. Do not edit!
package com.example.sumte.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sumte.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBookInfoCountBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView adultCount;

  @NonNull
  public final LinearLayout adultCountBar;

  @NonNull
  public final TextView adultCountText;

  @NonNull
  public final ImageView adultMinusBtn;

  @NonNull
  public final ImageView adultPlusBtn;

  @NonNull
  public final LinearLayout applyBtn;

  @NonNull
  public final LinearLayout calendar;

  @NonNull
  public final TextView childCount;

  @NonNull
  public final LinearLayout childCountBar;

  @NonNull
  public final TextView childCountText;

  @NonNull
  public final ImageView childMinusBtn;

  @NonNull
  public final ImageView childPlusBtn;

  @NonNull
  public final TextView countChange;

  @NonNull
  public final TextView dateCount;

  @NonNull
  public final TextView endDate;

  @NonNull
  public final LinearLayout mainApplyBtn;

  @NonNull
  public final LinearLayout mainCalendar;

  @NonNull
  public final LinearLayout mainCountBar;

  @NonNull
  public final LinearLayout selectedDate;

  @NonNull
  public final TextView startDate;

  @NonNull
  public final TextView to;

  @NonNull
  public final LinearLayout topText;

  private FragmentBookInfoCountBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView adultCount, @NonNull LinearLayout adultCountBar,
      @NonNull TextView adultCountText, @NonNull ImageView adultMinusBtn,
      @NonNull ImageView adultPlusBtn, @NonNull LinearLayout applyBtn,
      @NonNull LinearLayout calendar, @NonNull TextView childCount,
      @NonNull LinearLayout childCountBar, @NonNull TextView childCountText,
      @NonNull ImageView childMinusBtn, @NonNull ImageView childPlusBtn,
      @NonNull TextView countChange, @NonNull TextView dateCount, @NonNull TextView endDate,
      @NonNull LinearLayout mainApplyBtn, @NonNull LinearLayout mainCalendar,
      @NonNull LinearLayout mainCountBar, @NonNull LinearLayout selectedDate,
      @NonNull TextView startDate, @NonNull TextView to, @NonNull LinearLayout topText) {
    this.rootView = rootView;
    this.adultCount = adultCount;
    this.adultCountBar = adultCountBar;
    this.adultCountText = adultCountText;
    this.adultMinusBtn = adultMinusBtn;
    this.adultPlusBtn = adultPlusBtn;
    this.applyBtn = applyBtn;
    this.calendar = calendar;
    this.childCount = childCount;
    this.childCountBar = childCountBar;
    this.childCountText = childCountText;
    this.childMinusBtn = childMinusBtn;
    this.childPlusBtn = childPlusBtn;
    this.countChange = countChange;
    this.dateCount = dateCount;
    this.endDate = endDate;
    this.mainApplyBtn = mainApplyBtn;
    this.mainCalendar = mainCalendar;
    this.mainCountBar = mainCountBar;
    this.selectedDate = selectedDate;
    this.startDate = startDate;
    this.to = to;
    this.topText = topText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBookInfoCountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBookInfoCountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_book_info_count, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBookInfoCountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adult_count;
      TextView adultCount = ViewBindings.findChildViewById(rootView, id);
      if (adultCount == null) {
        break missingId;
      }

      id = R.id.adult_count_bar;
      LinearLayout adultCountBar = ViewBindings.findChildViewById(rootView, id);
      if (adultCountBar == null) {
        break missingId;
      }

      id = R.id.adult_count_text;
      TextView adultCountText = ViewBindings.findChildViewById(rootView, id);
      if (adultCountText == null) {
        break missingId;
      }

      id = R.id.adult_minus_btn;
      ImageView adultMinusBtn = ViewBindings.findChildViewById(rootView, id);
      if (adultMinusBtn == null) {
        break missingId;
      }

      id = R.id.adult_plus_btn;
      ImageView adultPlusBtn = ViewBindings.findChildViewById(rootView, id);
      if (adultPlusBtn == null) {
        break missingId;
      }

      id = R.id.apply_btn;
      LinearLayout applyBtn = ViewBindings.findChildViewById(rootView, id);
      if (applyBtn == null) {
        break missingId;
      }

      id = R.id.calendar;
      LinearLayout calendar = ViewBindings.findChildViewById(rootView, id);
      if (calendar == null) {
        break missingId;
      }

      id = R.id.child_count;
      TextView childCount = ViewBindings.findChildViewById(rootView, id);
      if (childCount == null) {
        break missingId;
      }

      id = R.id.child_count_bar;
      LinearLayout childCountBar = ViewBindings.findChildViewById(rootView, id);
      if (childCountBar == null) {
        break missingId;
      }

      id = R.id.child_count_text;
      TextView childCountText = ViewBindings.findChildViewById(rootView, id);
      if (childCountText == null) {
        break missingId;
      }

      id = R.id.child_minus_btn;
      ImageView childMinusBtn = ViewBindings.findChildViewById(rootView, id);
      if (childMinusBtn == null) {
        break missingId;
      }

      id = R.id.child_plus_btn;
      ImageView childPlusBtn = ViewBindings.findChildViewById(rootView, id);
      if (childPlusBtn == null) {
        break missingId;
      }

      id = R.id.count_change;
      TextView countChange = ViewBindings.findChildViewById(rootView, id);
      if (countChange == null) {
        break missingId;
      }

      id = R.id.date_count;
      TextView dateCount = ViewBindings.findChildViewById(rootView, id);
      if (dateCount == null) {
        break missingId;
      }

      id = R.id.end_date;
      TextView endDate = ViewBindings.findChildViewById(rootView, id);
      if (endDate == null) {
        break missingId;
      }

      id = R.id.main_apply_btn;
      LinearLayout mainApplyBtn = ViewBindings.findChildViewById(rootView, id);
      if (mainApplyBtn == null) {
        break missingId;
      }

      id = R.id.main_calendar;
      LinearLayout mainCalendar = ViewBindings.findChildViewById(rootView, id);
      if (mainCalendar == null) {
        break missingId;
      }

      id = R.id.main_count_bar;
      LinearLayout mainCountBar = ViewBindings.findChildViewById(rootView, id);
      if (mainCountBar == null) {
        break missingId;
      }

      id = R.id.selected_date;
      LinearLayout selectedDate = ViewBindings.findChildViewById(rootView, id);
      if (selectedDate == null) {
        break missingId;
      }

      id = R.id.start_date;
      TextView startDate = ViewBindings.findChildViewById(rootView, id);
      if (startDate == null) {
        break missingId;
      }

      id = R.id.to;
      TextView to = ViewBindings.findChildViewById(rootView, id);
      if (to == null) {
        break missingId;
      }

      id = R.id.top_text;
      LinearLayout topText = ViewBindings.findChildViewById(rootView, id);
      if (topText == null) {
        break missingId;
      }

      return new FragmentBookInfoCountBinding((ConstraintLayout) rootView, adultCount,
          adultCountBar, adultCountText, adultMinusBtn, adultPlusBtn, applyBtn, calendar,
          childCount, childCountBar, childCountText, childMinusBtn, childPlusBtn, countChange,
          dateCount, endDate, mainApplyBtn, mainCalendar, mainCountBar, selectedDate, startDate, to,
          topText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
