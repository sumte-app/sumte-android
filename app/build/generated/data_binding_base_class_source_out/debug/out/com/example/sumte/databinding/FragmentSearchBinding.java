// Generated by view binder compiler. Do not edit!
package com.example.sumte.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sumte.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final LinearLayout bookInfo;

  @NonNull
  public final TextView count;

  @NonNull
  public final TextView dateCount;

  @NonNull
  public final TextView endDate;

  @NonNull
  public final LinearLayout mainSearchBar;

  @NonNull
  public final LinearLayout searchBar;

  @NonNull
  public final ImageView searchIcon;

  @NonNull
  public final TextView searchText;

  @NonNull
  public final LinearLayout searchWithName;

  @NonNull
  public final TextView startDate;

  @NonNull
  public final TextView to;

  @NonNull
  public final LinearLayout topText;

  private FragmentSearchBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView backBtn,
      @NonNull LinearLayout bookInfo, @NonNull TextView count, @NonNull TextView dateCount,
      @NonNull TextView endDate, @NonNull LinearLayout mainSearchBar,
      @NonNull LinearLayout searchBar, @NonNull ImageView searchIcon, @NonNull TextView searchText,
      @NonNull LinearLayout searchWithName, @NonNull TextView startDate, @NonNull TextView to,
      @NonNull LinearLayout topText) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.bookInfo = bookInfo;
    this.count = count;
    this.dateCount = dateCount;
    this.endDate = endDate;
    this.mainSearchBar = mainSearchBar;
    this.searchBar = searchBar;
    this.searchIcon = searchIcon;
    this.searchText = searchText;
    this.searchWithName = searchWithName;
    this.startDate = startDate;
    this.to = to;
    this.topText = topText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      ImageView backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.book_info;
      LinearLayout bookInfo = ViewBindings.findChildViewById(rootView, id);
      if (bookInfo == null) {
        break missingId;
      }

      id = R.id.count;
      TextView count = ViewBindings.findChildViewById(rootView, id);
      if (count == null) {
        break missingId;
      }

      id = R.id.date_count;
      TextView dateCount = ViewBindings.findChildViewById(rootView, id);
      if (dateCount == null) {
        break missingId;
      }

      id = R.id.end_date;
      TextView endDate = ViewBindings.findChildViewById(rootView, id);
      if (endDate == null) {
        break missingId;
      }

      id = R.id.main_search_bar;
      LinearLayout mainSearchBar = ViewBindings.findChildViewById(rootView, id);
      if (mainSearchBar == null) {
        break missingId;
      }

      id = R.id.search_bar;
      LinearLayout searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.search_icon;
      ImageView searchIcon = ViewBindings.findChildViewById(rootView, id);
      if (searchIcon == null) {
        break missingId;
      }

      id = R.id.search_text;
      TextView searchText = ViewBindings.findChildViewById(rootView, id);
      if (searchText == null) {
        break missingId;
      }

      id = R.id.search_with_name;
      LinearLayout searchWithName = ViewBindings.findChildViewById(rootView, id);
      if (searchWithName == null) {
        break missingId;
      }

      id = R.id.start_date;
      TextView startDate = ViewBindings.findChildViewById(rootView, id);
      if (startDate == null) {
        break missingId;
      }

      id = R.id.to;
      TextView to = ViewBindings.findChildViewById(rootView, id);
      if (to == null) {
        break missingId;
      }

      id = R.id.top_text;
      LinearLayout topText = ViewBindings.findChildViewById(rootView, id);
      if (topText == null) {
        break missingId;
      }

      return new FragmentSearchBinding((ConstraintLayout) rootView, backBtn, bookInfo, count,
          dateCount, endDate, mainSearchBar, searchBar, searchIcon, searchText, searchWithName,
          startDate, to, topText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
