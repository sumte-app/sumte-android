// Generated by view binder compiler. Do not edit!
package com.example.sumte.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sumte.R;
import com.kizitonwose.calendar.view.CalendarView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBookInfoDateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout applyBtn;

  @NonNull
  public final LinearLayout calendar;

  @NonNull
  public final TextView countChange;

  @NonNull
  public final LinearLayout countChangeBar;

  @NonNull
  public final TextView countText;

  @NonNull
  public final CalendarView customCalendar;

  @NonNull
  public final TextView dateCount;

  @NonNull
  public final TextView endDate;

  @NonNull
  public final ImageView leftBtn;

  @NonNull
  public final LinearLayout mainApplyBtn;

  @NonNull
  public final LinearLayout mainCalendar;

  @NonNull
  public final LinearLayout mainCountBar;

  @NonNull
  public final ImageView rightBtn;

  @NonNull
  public final LinearLayout selectedDate;

  @NonNull
  public final TextView startDate;

  @NonNull
  public final CalendarDayTitlesContainerBinding titlesContainer;

  @NonNull
  public final TextView to;

  @NonNull
  public final LinearLayout todayMonth;

  @NonNull
  public final TextView todayMonthText;

  @NonNull
  public final LinearLayout topText;

  @NonNull
  public final LinearLayout week;

  private FragmentBookInfoDateBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout applyBtn, @NonNull LinearLayout calendar, @NonNull TextView countChange,
      @NonNull LinearLayout countChangeBar, @NonNull TextView countText,
      @NonNull CalendarView customCalendar, @NonNull TextView dateCount, @NonNull TextView endDate,
      @NonNull ImageView leftBtn, @NonNull LinearLayout mainApplyBtn,
      @NonNull LinearLayout mainCalendar, @NonNull LinearLayout mainCountBar,
      @NonNull ImageView rightBtn, @NonNull LinearLayout selectedDate, @NonNull TextView startDate,
      @NonNull CalendarDayTitlesContainerBinding titlesContainer, @NonNull TextView to,
      @NonNull LinearLayout todayMonth, @NonNull TextView todayMonthText,
      @NonNull LinearLayout topText, @NonNull LinearLayout week) {
    this.rootView = rootView;
    this.applyBtn = applyBtn;
    this.calendar = calendar;
    this.countChange = countChange;
    this.countChangeBar = countChangeBar;
    this.countText = countText;
    this.customCalendar = customCalendar;
    this.dateCount = dateCount;
    this.endDate = endDate;
    this.leftBtn = leftBtn;
    this.mainApplyBtn = mainApplyBtn;
    this.mainCalendar = mainCalendar;
    this.mainCountBar = mainCountBar;
    this.rightBtn = rightBtn;
    this.selectedDate = selectedDate;
    this.startDate = startDate;
    this.titlesContainer = titlesContainer;
    this.to = to;
    this.todayMonth = todayMonth;
    this.todayMonthText = todayMonthText;
    this.topText = topText;
    this.week = week;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBookInfoDateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBookInfoDateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_book_info_date, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBookInfoDateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.apply_btn;
      LinearLayout applyBtn = ViewBindings.findChildViewById(rootView, id);
      if (applyBtn == null) {
        break missingId;
      }

      id = R.id.calendar;
      LinearLayout calendar = ViewBindings.findChildViewById(rootView, id);
      if (calendar == null) {
        break missingId;
      }

      id = R.id.count_change;
      TextView countChange = ViewBindings.findChildViewById(rootView, id);
      if (countChange == null) {
        break missingId;
      }

      id = R.id.count_change_bar;
      LinearLayout countChangeBar = ViewBindings.findChildViewById(rootView, id);
      if (countChangeBar == null) {
        break missingId;
      }

      id = R.id.count_text;
      TextView countText = ViewBindings.findChildViewById(rootView, id);
      if (countText == null) {
        break missingId;
      }

      id = R.id.custom_calendar;
      CalendarView customCalendar = ViewBindings.findChildViewById(rootView, id);
      if (customCalendar == null) {
        break missingId;
      }

      id = R.id.date_count;
      TextView dateCount = ViewBindings.findChildViewById(rootView, id);
      if (dateCount == null) {
        break missingId;
      }

      id = R.id.end_date;
      TextView endDate = ViewBindings.findChildViewById(rootView, id);
      if (endDate == null) {
        break missingId;
      }

      id = R.id.left_btn;
      ImageView leftBtn = ViewBindings.findChildViewById(rootView, id);
      if (leftBtn == null) {
        break missingId;
      }

      id = R.id.main_apply_btn;
      LinearLayout mainApplyBtn = ViewBindings.findChildViewById(rootView, id);
      if (mainApplyBtn == null) {
        break missingId;
      }

      id = R.id.main_calendar;
      LinearLayout mainCalendar = ViewBindings.findChildViewById(rootView, id);
      if (mainCalendar == null) {
        break missingId;
      }

      id = R.id.main_count_bar;
      LinearLayout mainCountBar = ViewBindings.findChildViewById(rootView, id);
      if (mainCountBar == null) {
        break missingId;
      }

      id = R.id.right_btn;
      ImageView rightBtn = ViewBindings.findChildViewById(rootView, id);
      if (rightBtn == null) {
        break missingId;
      }

      id = R.id.selected_date;
      LinearLayout selectedDate = ViewBindings.findChildViewById(rootView, id);
      if (selectedDate == null) {
        break missingId;
      }

      id = R.id.start_date;
      TextView startDate = ViewBindings.findChildViewById(rootView, id);
      if (startDate == null) {
        break missingId;
      }

      id = R.id.titlesContainer;
      View titlesContainer = ViewBindings.findChildViewById(rootView, id);
      if (titlesContainer == null) {
        break missingId;
      }
      CalendarDayTitlesContainerBinding binding_titlesContainer = CalendarDayTitlesContainerBinding.bind(titlesContainer);

      id = R.id.to;
      TextView to = ViewBindings.findChildViewById(rootView, id);
      if (to == null) {
        break missingId;
      }

      id = R.id.today_month;
      LinearLayout todayMonth = ViewBindings.findChildViewById(rootView, id);
      if (todayMonth == null) {
        break missingId;
      }

      id = R.id.today_month_text;
      TextView todayMonthText = ViewBindings.findChildViewById(rootView, id);
      if (todayMonthText == null) {
        break missingId;
      }

      id = R.id.top_text;
      LinearLayout topText = ViewBindings.findChildViewById(rootView, id);
      if (topText == null) {
        break missingId;
      }

      id = R.id.week;
      LinearLayout week = ViewBindings.findChildViewById(rootView, id);
      if (week == null) {
        break missingId;
      }

      return new FragmentBookInfoDateBinding((ConstraintLayout) rootView, applyBtn, calendar,
          countChange, countChangeBar, countText, customCalendar, dateCount, endDate, leftBtn,
          mainApplyBtn, mainCalendar, mainCountBar, rightBtn, selectedDate, startDate,
          binding_titlesContainer, to, todayMonth, todayMonthText, topText, week);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
